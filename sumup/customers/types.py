# Code generated by `py-sdk-gen`. DO NOT EDIT.
from datetime import datetime, date
import typing
import pydantic


class Address(pydantic.BaseModel):
    """
    Profile's personal address information.
    """

    city: typing.Optional[str] = None
    """
	City name from the address.
	"""

    country: typing.Optional[str] = None
    """
	Two letter country code formatted according to [ISO3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).
	"""

    line_1: typing.Optional[str] = None
    """
	First line of the address with details of the street name and number.
	"""

    line_2: typing.Optional[str] = None
    """
	Second line of the address with details of the building, unit, apartment, and floor numbers.
	"""

    postal_code: typing.Optional[str] = None
    """
	Postal code from the address.
	"""

    state: typing.Optional[str] = None
    """
	State name or abbreviation from the address.
	"""


class PersonalDetails(pydantic.BaseModel):
    """
    Personal details for the customer.
    """

    address: typing.Optional[Address] = None
    """
	Profile's personal address information.
	"""

    birth_date: typing.Optional[date] = None
    """
	Date of birth of the customer.
	Format: date
	"""

    email: typing.Optional[str] = None
    """
	Email address of the customer.
	"""

    first_name: typing.Optional[str] = None
    """
	First name of the customer.
	"""

    last_name: typing.Optional[str] = None
    """
	Last name of the customer.
	"""

    phone: typing.Optional[str] = None
    """
	Phone number of the customer.
	"""

    tax_id: typing.Optional[str] = None
    """
	An identification number user for tax purposes (e.g. CPF)
	Max length: 255
	"""


class Customer(pydantic.BaseModel):
    """
    Customer is a schema definition.
    """

    customer_id: str
    """
	Unique ID of the customer.
	"""

    personal_details: typing.Optional[PersonalDetails] = None
    """
	Personal details for the customer.
	"""


class Error(pydantic.BaseModel):
    """
    Error message structure.
    """

    error_code: typing.Optional[str] = None
    """
	Platform code for the error.
	"""

    message: typing.Optional[str] = None
    """
	Short description of the error.
	"""


class ErrorForbidden(pydantic.BaseModel):
    """
    Error message for forbidden requests.
    """

    error_code: typing.Optional[str] = None
    """
	Platform code for the error.
	"""

    error_message: typing.Optional[str] = None
    """
	Short description of the error.
	"""

    status_code: typing.Optional[str] = None
    """
	HTTP status code for the error.
	"""


class MandateResponse(pydantic.BaseModel):
    """
    Created mandate
    """

    merchant_code: typing.Optional[str] = None
    """
	Merchant code which has the mandate
	"""

    status: typing.Optional[str] = None
    """
	Mandate status
	"""

    type: typing.Optional[str] = None
    """
	Indicates the mandate type
	"""


PaymentInstrumentResponseType = typing.Literal["card"]

PaymentInstrumentResponseCardType = typing.Literal[
    "AMEX",
    "CUP",
    "DINERS",
    "DISCOVER",
    "ELO",
    "ELV",
    "HIPERCARD",
    "JCB",
    "MAESTRO",
    "MASTERCARD",
    "UNKNOWN",
    "VISA",
    "VISA_ELECTRON",
    "VISA_VPAY",
]


class PaymentInstrumentResponseCard(pydantic.BaseModel):
    """
    Details of the payment card.
    """

    last_4_digits: typing.Optional[str] = None
    """
	Last 4 digits of the payment card number.
	Read only
	Min length: 4
	Max length: 4
	"""

    type: typing.Optional[PaymentInstrumentResponseCardType] = None
    """
	Issuing card network of the payment card.
	Read only
	"""


class PaymentInstrumentResponse(pydantic.BaseModel):
    """
    Payment Instrument Response
    """

    active: typing.Optional[bool] = None
    """
	Indicates whether the payment instrument is active and can be used for payments. To deactivate it, send a`DELETE` request to the resource endpoint.
	Read only
	Default: true
	"""

    card: typing.Optional[PaymentInstrumentResponseCard] = None
    """
	Details of the payment card.
	"""

    created_at: typing.Optional[datetime] = None
    """
	Creation date of payment instrument. Response format expressed according to [ISO8601](https://en.wikipedia.org/wiki/ISO_8601) code.
	"""

    mandate: typing.Optional[MandateResponse] = None
    """
	Created mandate
	"""

    token: typing.Optional[str] = None
    """
	Unique token identifying the saved payment card for a customer.
	Read only
	"""

    type: typing.Optional[PaymentInstrumentResponseType] = None
    """
	Type of the payment instrument.
	"""
