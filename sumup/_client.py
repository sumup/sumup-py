# Code generated by `py-sdk-gen`. DO NOT EDIT.
import os
import httpx
from functools import cached_property

from ._service import Resource, AsyncResource
from .checkouts import CheckoutsResource, AsyncCheckoutsResource
from .customers import CustomersResource, AsyncCustomersResource
from .members import MembersResource, AsyncMembersResource
from .memberships import MembershipsResource, AsyncMembershipsResource
from .merchant import MerchantResource, AsyncMerchantResource
from .payouts import PayoutsResource, AsyncPayoutsResource
from .readers import ReadersResource, AsyncReadersResource
from .receipts import ReceiptsResource, AsyncReceiptsResource
from .roles import RolesResource, AsyncRolesResource
from .subaccounts import SubaccountsResource, AsyncSubaccountsResource
from .transactions import TransactionsResource, AsyncTransactionsResource

BASE_URL = "https://api.sumup.com"


class Sumup(Resource):
    def __init__(
        self, api_key: str = None, base_url: str = BASE_URL, timeout: httpx.Timeout = None
    ):
        self.api_key = api_key or os.getenv("SUMUP_API_KEY")
        super().__init__(
            httpx.Client(
                base_url=base_url,
                timeout=timeout,
                headers={
                    "User-Agent": f"sumup-py/{self.version}",
                    "Authorization": f"Bearer {self.api_key}",
                },
            )
        )

    @cached_property
    def checkouts(self) -> CheckoutsResource:
        from .checkouts.resource import CheckoutsResource

        return CheckoutsResource(self._client)

    @cached_property
    def customers(self) -> CustomersResource:
        from .customers.resource import CustomersResource

        return CustomersResource(self._client)

    @cached_property
    def members(self) -> MembersResource:
        from .members.resource import MembersResource

        return MembersResource(self._client)

    @cached_property
    def memberships(self) -> MembershipsResource:
        from .memberships.resource import MembershipsResource

        return MembershipsResource(self._client)

    @cached_property
    def merchant(self) -> MerchantResource:
        from .merchant.resource import MerchantResource

        return MerchantResource(self._client)

    @cached_property
    def payouts(self) -> PayoutsResource:
        from .payouts.resource import PayoutsResource

        return PayoutsResource(self._client)

    @cached_property
    def readers(self) -> ReadersResource:
        from .readers.resource import ReadersResource

        return ReadersResource(self._client)

    @cached_property
    def receipts(self) -> ReceiptsResource:
        from .receipts.resource import ReceiptsResource

        return ReceiptsResource(self._client)

    @cached_property
    def roles(self) -> RolesResource:
        from .roles.resource import RolesResource

        return RolesResource(self._client)

    @cached_property
    def subaccounts(self) -> SubaccountsResource:
        from .subaccounts.resource import SubaccountsResource

        return SubaccountsResource(self._client)

    @cached_property
    def transactions(self) -> TransactionsResource:
        from .transactions.resource import TransactionsResource

        return TransactionsResource(self._client)


class AsyncSumup(AsyncResource):
    def __init__(
        self, api_key: str = None, base_url: str = BASE_URL, timeout: httpx.Timeout = None
    ):
        self.api_key = api_key or os.getenv("SUMUP_API_KEY")
        super().__init__(
            httpx.AsyncClient(
                base_url=base_url,
                timeout=timeout,
                headers={
                    "User-Agent": f"sumup-py/{self.version}",
                    "Authorization": f"Bearer {self.api_key}",
                },
            )
        )

    @cached_property
    def checkouts(self) -> AsyncCheckoutsResource:
        from .checkouts.resource import AsyncCheckoutsResource

        return AsyncCheckoutsResource(self._client)

    @cached_property
    def customers(self) -> AsyncCustomersResource:
        from .customers.resource import AsyncCustomersResource

        return AsyncCustomersResource(self._client)

    @cached_property
    def members(self) -> AsyncMembersResource:
        from .members.resource import AsyncMembersResource

        return AsyncMembersResource(self._client)

    @cached_property
    def memberships(self) -> AsyncMembershipsResource:
        from .memberships.resource import AsyncMembershipsResource

        return AsyncMembershipsResource(self._client)

    @cached_property
    def merchant(self) -> AsyncMerchantResource:
        from .merchant.resource import AsyncMerchantResource

        return AsyncMerchantResource(self._client)

    @cached_property
    def payouts(self) -> AsyncPayoutsResource:
        from .payouts.resource import AsyncPayoutsResource

        return AsyncPayoutsResource(self._client)

    @cached_property
    def readers(self) -> AsyncReadersResource:
        from .readers.resource import AsyncReadersResource

        return AsyncReadersResource(self._client)

    @cached_property
    def receipts(self) -> AsyncReceiptsResource:
        from .receipts.resource import AsyncReceiptsResource

        return AsyncReceiptsResource(self._client)

    @cached_property
    def roles(self) -> AsyncRolesResource:
        from .roles.resource import AsyncRolesResource

        return AsyncRolesResource(self._client)

    @cached_property
    def subaccounts(self) -> AsyncSubaccountsResource:
        from .subaccounts.resource import AsyncSubaccountsResource

        return AsyncSubaccountsResource(self._client)

    @cached_property
    def transactions(self) -> AsyncTransactionsResource:
        from .transactions.resource import AsyncTransactionsResource

        return AsyncTransactionsResource(self._client)
